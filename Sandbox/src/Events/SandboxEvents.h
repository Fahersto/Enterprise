#pragma once

#include "Enterprise/Events/BaseEvent.h"

/* SandboxEvents.h
	This header contains definitions for all client Event classes, as well as the CategoryID and TypeID
	enums.  Include this file to access client Events.

	The enums and classes are generated by the preprocessor by defining the macros in SandboxEvents_TypeList.h
	and SandboxEvents_CategoryList.h multiple times.  Don't modify this file to create new Event types or
	category types.  Instead, add the type or category to those files.
*/

namespace Sandbox::Event
{
	// Generate the enums for all client Event types and categories.
	#include "Enterprise\Events\Generation\StartEnums.h"
	namespace TypeIDs {
		enum {
			_None = Enterprise::Event::TypeIDs::_NumOfCoreTypes,
			#include "SandboxEvents_TypeList.h"
			_NumOfTypes
		};
	}
	namespace CategoryIDs {
		enum {
			_All = Enterprise::Event::CategoryIDs::_NumOfCoreCategories,
			#include "SandboxEvents_CategoryList.h"
			_NumOfCategories
		};
	}
	#include "Enterprise\Events\Generation\StopAll.h"

	// The three includes below expand into all the client Event classes.
	#include "Enterprise\Events\Generation\StartClasses.h"
	#include "SandboxEvents_TypeList.h"
	#include "Enterprise\Events\Generation\StopAll.h"
}

// Tell the engine about the client Event types and categories
void Enterprise::Dispatcher::GetClientListSizes()
{
	m_NumOfEventTypes = Sandbox::Event::TypeIDs::_NumOfTypes;
	m_NumOfEventCategories = Sandbox::Event::CategoryIDs::_NumOfCategories;
}

// Populate the client entries of the Event Category Matrix
void Enterprise::Dispatcher::InitClientECM()
{
	#include "Enterprise\Events\Generation\StartECM.h"
	#include "Events\SandboxEvents_CategoryList.h"
	#include "Enterprise\Events\Generation\StopAll.h"
}